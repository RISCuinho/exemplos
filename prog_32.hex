//============================
//Post-assembly program listing
//PC instruction  basic assembly  original assembly   Notes
//      (31:0)        code              code 
//00 0x00300093	addi x1 x0 3	addi x1, x0, 3      # x1 = x0 + 3 = 3 rs1 = x0 (always 0) + imm offset = 3
//04 0xffb08113	addi x2 x1 -5	addi x2, x1, -5     # x2 = x1 - 5 = 3 + 0xfffffffb (-5 sign-extended to 32-bits) = //-2 (0xfffffffe)
//08 0x00100613	addi x12 x0 1	addi x12, x0, 1     # x12 = 1
//0c 0x00c00693	addi x13 x0 12	addi x13, x0, 12    # x13 = 12
//10 0x01f00713	addi x14 x0 31	addi x14, x0, 31    # x14 = 31
//14 0x01c00793	addi x15 x0 28	addi x15, x0, 28    # x15 = 28
//18 0x00300813	addi x16 x0 3	addi x16, x0, 3     # x16 = 3
//1c 0x01e00893	addi x17 x0 30	addi x17, x0, 30    # x17 = 30
//20 0x00c091b3	sll x3 x1 x12	sll x3, x1, x12     # x3 = 0b110 shift 0b11 logical left 1 bit
//24 0x00d11233	sll x4 x2 x13	sll x4, x2, x13     # x4 = 0xffffe000 shift 0xfffffffe logical left 12 bits
//28 0x00e092b3	sll x5 x1 x14	sll x5, x1, x14     # x5 = 0x80000000 shift 0b11 logical left 31 bits. Bit 1 drops //off to left
//2c 0x00c0d333	srl x6 x1 x12	srl x6, x1, x12     # x6 = 0b1 shift 0b11 logical right 1 bit
//30 0x00c153b3	srl x7 x2 x12	srl x7, x2, x12     # x7 = 0x7fffffff, shifts 0 into bit 31. Shifts (31:1) to (30:0)//. Bit 0 drops off to right
//34 0x00f15433	srl x8 x2 x15	srl x8, x2, x15     # x8 = 0x0000000f, shifts 0s into bits (31:4). Shifts (31:28) //to (3:0). Bits (27:0) drop off to right
//38 0x40c2d4b3	sra x9 x5 x12	sra x9, x5, x12     # x9 = 0xc0000000, shift 1 into bit 31. Shift bits (31:1) to //(30:0). Bit 0 drops off to right
//3c 0x4102d533	sra x10 x5 x16	sra x10, x5, x16    # x10 = 0xf0000000, shifts 1s into bits (31:29). Shifts //(28:3) to (25:0). Bits (2:0) drop off to right
//40 0x4112d5b3	sra x11 x5 x17	sra x11, x5, x17    # x11 = 0xfffffffe, shifts 1s into bits (31:2). Shifts //(31:30) to (1:0). Bits (29:0) drop off to right
//44 0x0000006f	jal x0 0	    1b: jal zero,1b     # repeat the NOP instruction, recommended rather than 1b: beq //x0,x0,1b 
//

//   0         1        2        3
// 3 2 1 0  3 2 1 0  3 2 1 0  3 2 1 0
  00300093 ffb08113 00100613 00c00693
  01f00713 01c00793 00300813 01e00893
  00c091b3 00d11233 00e092b3 00c0d333
  00c153b3 00f15433 40c2d4b3 4102d533
  4112d5b3 0000006f 00000000 00000000 
  00000000 00000000 00000000 00000000
  00000000 00000000 00000000 00000000
  00000000 00000000 00000000 00000000
